{
    "transformer": {
        "directory": "tensorflow2/built-in/NaturalLanguageProcessing/transformer/",
        "testcases": [
            "cd run_scripts/ci;bash Transformer_Train_1MLU.sh",
            "cd run_scripts/ci;bash Transformer_Train_Horovod_Float32.sh",
            "cd run_scripts/ci;bash XLA_Transformer_Train_Horovod_Float32.sh"
	]
    },
    "google_bert": {
        "directory": "tensorflow2/built-in/NaturalLanguageProcessing/google_bert",
        "testcases": [
            "cd run_scripts/ci/;bash Bert_Train_Float32_1MLU.sh",
            "cd run_scripts/ci/;bash Bert_Train_Horovod_AMP.sh",
            "cd run_scripts/ci/;bash Bert_Train_Horovod_Float32.sh",
            "cd run_scripts/ci/;bash XLA_Bert_Train_Horovod_AMP.sh"

	]
    },
    "conformer_train": {
        "directory": "tensorflow2/built-in/ASR/Conformer",
        "testcases": [
            "cd run_scripts/ci;bash Conformer_Train_1MLU.sh",
            "cd run_scripts/ci;bash Conformer_Train_Horovod_AMP.sh",
            "cd run_scripts/ci;bash Conformer_Train_Horovod_Float32.sh"
        ]
    },
    "densenet201": {
        "directory": "tensorflow2/built-in/Classification/common_networks",
        "testcases": [
            "cd run_scripts/ci;bash DenseNet201_Float32.sh",
            "cd run_scripts/ci;bash Horovod_DenseNet201_AMP.sh",
            "cd run_scripts/ci;bash Horovod_DenseNet201_Float32.sh"
        ]
    },
    "resnet101": {
        "directory": "tensorflow2/built-in/Classification/common_networks",
        "testcases": [
            "cd run_scripts/ci;bash ResNet101_Float32.sh",
            "cd run_scripts/ci;bash Horovod_ResNet101_AMP.sh",
            "cd run_scripts/ci;bash Horovod_ResNet101_Float32.sh"
        ]
    },
    "resnet50": {
        "directory": "tensorflow2/built-in/Classification/common_networks",
        "testcases": [
            "cd run_scripts/ci;bash ResNet50_Float32.sh",
            "cd run_scripts/ci;bash Horovod_ResNet50_AMP.sh",
            "cd run_scripts/ci;bash Horovod_ResNet50_Float32.sh",
            "cd run_scripts/ci;bash XLA_Horovod_ResNet50_AMP.sh"
        ]
    },
    "vgg19": {
        "directory": "tensorflow2/built-in/Classification/common_networks",
        "testcases": [
            "cd run_scripts/ci;bash Vgg19_Float32.sh",
            "cd run_scripts/ci;bash Horovod_Vgg19_AMP.sh",
            "cd run_scripts/ci;bash Horovod_Vgg19_Float32.sh"
        ]
    },
    "centernet_train":{
        "directory": "tensorflow2/built-in/Detection/centernet",
        "testcases": [
            "cd run_scripts;bash prepare_dataset.sh",
            "cd run_scripts/ci;bash Centernet_Train_Horovod_Float32.sh",
            "cd run_scripts/ci;bash Centernet_Train_Horovod_AMP.sh"
        ]
    },
    "dlrm_train": {
        "directory": "tensorflow2/built-in/Recommendation/DLRM",
        "testcases": [
            "cd run_scripts/ci;bash Horovod_Train_DLRM_AMP.sh",
            "cd run_scripts/ci;bash Horovod_Train_DLRM_Float32.sh",
            "cd run_scripts/ci;bash XLA_Horovod_Train_DLRM_AMP.sh"
        ]
    },
    "swin-transformer": {
        "directory": "tensorflow2/built-in/Classification/swin-transformer",
        "testcases": [
            "cd run_scripts/ci; bash Swin_Transformer_Train_Horovod_Float32.sh",
            "cd run_scripts/ci; bash Swin_Transformer_Train_Horovod_AMP.sh",
            "cd run_scripts/ci; bash Swin_Transformer_Train_1MLU.sh",
            "cd run_scripts/ci; bash Swin_Transformer_Infer_1MLU.sh",
            "cd run_scripts/ci; bash Swin_Transformer_Train_XLA.sh"
        ]
    },
    "conformer_infer": {
        "directory": "tensorflow2/built-in/ASR/Conformer",
        "testcases": [
            "cd run_scripts/ci;bash Conformer_Infer_1MLU.sh",
            "cd run_scripts/ci;bash Conformer_Infer_1MLU_AMP.sh"
        ]
    },
    "tf_models_bert": {
        "directory": "tensorflow2/built-in/NaturalLanguageProcessing/tf_models_bert",
        "testcases": [
            "cd run_scripts/ci;bash prepare_env.sh && bash Bert_Train_Float32_1MLU.sh",
            "cd run_scripts/ci;bash prepare_env.sh && bash Bert_Train_Float32_4MLUs.sh"
        ]
    }
}
